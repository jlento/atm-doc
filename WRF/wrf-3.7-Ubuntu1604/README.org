* WRF

** Download

http://www2.mmm.ucar.edu/wrf/users/download/get_sources.html

** Tutorial

http://www2.mmm.ucar.edu/wrf/OnLineTutorial/index.htm

#+BEGIN_SRC bash
# Build
wget http://www2.mmm.ucar.edu/wrf/src/WRFV3.7.1.TAR.gz
tar xvf WRFV3.7.1.TAR.gz
cd WRFV3/
export NETCDF=/usr WRFIO_NCD_LARGE_FILE_SUPPORT=1
# GCC, serial, no nesting
./configure <<<'32

'
export WRF_EM_CORE=1
./compile em_b_wave >& compile.log

# Test
cd test/em_b_wave/
./run_me_first.csh
ln -s ../../run/LANDUSE.TBL
./ideal.exe
./wrf.exe
#+END_SRC

** Postprocessing / Visualization

- ~ncdump~
- ~ncview~

*** wrf_interp

- interpolation to user specified pressure levels
- wind de-staggering

#+BEGIN_SRC bash
# Build
mkdir -p ~/wrf/wrf_interp
cd $_
wget http://www2.mmm.ucar.edu/wrf/src/WRF_INTERP.TAR.gz
tar xvf WRF_INTERP.TAR.gz
sed -i 's/\.eq\. \.T/.eqv. .T/' wrf_interp.F90
gfortran -o wrf_interp.exe wrf_interp.F90 -I/usr/include -free -L/usr/lib -lnetcdff

# Test
[ -f namelist.vinterp.orig ] || mv namelist.vinterp namelist.vinterp.orig
cat > namelist.vinterp <<EOF
&io
 path_to_input = '/home/jlento/wrf/WRFV3/test/em_b_wave/'
 path_to_output = '/home/jlento/wrf/wrf_interp/'
 root_name = 'wrfout'
 grid_id = 1
 start_date =  '0001'
 leap_year  = .TRUE.
 debug = .FALSE.
/

&interp_in
  interp_levels = 1000.,800.,500.
  extrapolate = 1
  unstagger_grid = .TRUE.
  vert_coordinate = 'pres'
/
EOF
./wrf_interp.exe
#+END_SRC


*** iowrf

- select a region
- average to smaller resolution (and files)
- (de-staggering)

#+BEGIN_SRC bash
mkdir -p ~/wrf/iowrf
cd $_
wget http://www2.mmm.ucar.edu/wrf/src/iowrf.f
sed -i '657s/.*/intrinsic iargc/' iowrf.f
gfortran -o iowrf iowrf.f -ffree-form -I/usr/include -L/usr/lib -lnetcdff

#+END_SRC
